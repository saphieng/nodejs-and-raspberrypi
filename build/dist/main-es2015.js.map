{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/comms/comms.service.ts","./src/app/home/home.module.ts","./src/app/home/home/home.component.ts","./src/app/home/home/home.component.html","./src/app/shared/navbar/navbar.component.ts","./src/app/shared/navbar/navbar.component.html","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home/home.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'controller-ui Hello world';\r\n}\r\n","\r\n  <router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MDBBootstrapModulesPro } from 'ng-uikit-pro-standard';\r\nimport { MDBSpinningPreloader } from 'ng-uikit-pro-standard';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport {SharedModule} from './shared/shared.module';\r\nimport {HomeModule} from './home/home.module'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MDBBootstrapModulesPro.forRoot(),\r\n    SharedModule,\r\n    HomeModule\r\n  ],\r\n  providers: [MDBSpinningPreloader],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport {webSocket, WebSocketSubject} from 'rxjs/webSocket';\nimport { Observable, BehaviorSubject, from } from 'rxjs';\nimport {Message} from '../global-interfaces/comms-message'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommsService {\n\n  connectionSocket: WebSocketSubject<any> = null;\n  messages: BehaviorSubject<Message> = new BehaviorSubject<Message>(null);\n\n  constructor() { }\n\n  connect(ipAndPort: string): Promise<string> {\n    return new Promise<string> (async (resolve,reject) => {\n      try {\n        this.connectionSocket = await webSocket(`ws://${ipAndPort}`);\n        this.connectionSocket.asObservable().subscribe((newMesage: Message) => {\n          if (newMesage) {\n            console.log(`data rx: ${JSON.stringify(newMesage)}`);\n            this.messages.next(newMesage);\n          }\n          \n        })\n        resolve()\n      }\n      catch(err) {\n        reject(err);\n      }\n      \n    })\n  }\n\n  send(message: Message): Promise<string> {\n    return new Promise((resolve, reject) => {\n      try {\n        this.connectionSocket.next((message));\n        resolve()\n      }\n      catch(err) {\n        reject(err);\n      }\n    })\n\n  }\n\n  disconnect() {\n    if (this.connectionSocket) {\n      this.connectionSocket.unsubscribe();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\nimport { MDBBootstrapModulesPro } from 'ng-uikit-pro-standard';\nimport {SharedModule} from '../shared/shared.module'\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    MDBBootstrapModulesPro.forRoot(),\n    SharedModule,\n    FormsModule\n  ]\n})\nexport class HomeModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {CommsService} from '../../comms/comms.service'\nimport {Message} from '../../global-interfaces/comms-message'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  commandAndData: string = null;\n  receivedData: string = null;\n  constructor(private comms: CommsService) { }\n\n  ngOnInit(): void {\n    this.comms.messages.subscribe((newMessage: Message) => {\n      if (newMessage) {\n        this.receivedData = `${newMessage.Command}: ${newMessage.Data}`;\n      }\n    })\n  }\n\n  async send() {\n    const newCommand: string = this.commandAndData.split(\" \")[0];\n    const newData: string = this.commandAndData.substr(this.commandAndData.indexOf(\" \") + 1);\n    //special command to start websocket connection\n    if (newCommand === \"connect\") {\n       await this.comms.connect(newData).catch(err => {this.receivedData = err});\n    }\n    else{ //send everything else to websockets\n      const newMessage: Message = {Command: newCommand, Data: newData}\n      console.log(`tx: ${JSON.stringify(newMessage)}`);\n      this.comms.send(newMessage).catch(err => {this.receivedData = err});\n    }\n\n  }\n\n}\n","<app-navbar></app-navbar>\n<div class=\"view\" style=\"background-color: #37474F;  background-size: cover;\">\n    <!-- Mask & flexbox options-->\n    <div class=\"mask align-items-center\">\n\n            <div class=\"container\" style=\"padding-top: 1rem;\">\n            <mdb-card>\n                <!--Card image-->\n                <!-- <mdb-card-img src=\"https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(97).jpg\" alt=\"Card image cap\"></mdb-card-img> -->\n                <!--Card content-->\n                <mdb-card-body>\n            \n                <!--Title-->\n                <mdb-card-title>\n                    <h4>Send To Controller</h4>\n                </mdb-card-title>\n            \n                <!--Text-->\n                <mdb-card-text> This is an example of how you can send a string to the controller.\n                </mdb-card-text>\n\n                <input mdbInput type=\"text\" class=\"form-control\" placeholder=\"Enter string to send\" [(ngModel)]=\"commandAndData\">\n                <br>\n                <button mdbBtn type=\"button\" color=\"primary\" block=\"true\" mdbWavesEffect (click)=\"send()\">Send</button>\n                </mdb-card-body>\n            </mdb-card>\n        </div>\n        <div class=\"container\" style=\"padding-top: 1rem;\">\n            <mdb-card >\n                <!--Card image-->\n                <!-- <mdb-card-img src=\"https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(97).jpg\" alt=\"Card image cap\"></mdb-card-img> -->\n                <!--Card content-->\n                <mdb-card-body>\n            \n                <!--Title-->\n                <mdb-card-title>\n                    <h4>Response From Controller</h4>\n                </mdb-card-title>\n            \n                <!--Text-->\n                <mdb-card-text *ngIf=\"receivedData\"> {{receivedData}}\n                </mdb-card-text>\n\n                </mdb-card-body>\n            </mdb-card>\n        </div>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark special-color-dark\">\n    <mdb-navbar-brand>\n        <img src=\"../../../assets/saphi -logo-navbar.png\" height=\"30\" alt=\"\" style=\"padding-right: 1rem;\">\n    </mdb-navbar-brand>\n<!--     <links>\n        <ul class=\"navbar-nav\">\n            <li class=\"nav-item active\">\n                <a class=\"nav-link waves-light\" mdbWavesEffect>Home <span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link waves-light\" mdbWavesEffect>Page 2</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link waves-light\" mdbWavesEffect>Page 3</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link disabled\" >Page 4</a>\n            </li>\n        </ul>\n    </links> -->\n</mdb-navbar>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { MDBBootstrapModulesPro } from 'ng-uikit-pro-standard';\n\n\n\n@NgModule({\n  declarations: [NavbarComponent],\n  imports: [\n    CommonModule,\n    MDBBootstrapModulesPro.forRoot()\n  ],\n  exports: [NavbarComponent]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}