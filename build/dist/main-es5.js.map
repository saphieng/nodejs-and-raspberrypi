{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/comms/comms.service.ts","webpack:///src/app/home/home.module.ts","webpack:///src/app/home/home/home.component.html","webpack:///src/app/home/home/home.component.ts","webpack:///src/app/shared/navbar/navbar.component.ts","webpack:///src/app/shared/navbar/navbar.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CommsService","connectionSocket","messages","ipAndPort","reject","asObservable","subscribe","newMesage","console","log","JSON","stringify","next","message","err","unsubscribe","providedIn","HomeModule","HomeComponent","comms","commandAndData","receivedData","newMessage","Command","Data","newCommand","split","newData","substr","indexOf","connect","send","NavbarComponent","SharedModule","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home/home.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'controller-ui Hello world';\r\n}\r\n","\r\n  <router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MDBBootstrapModulesPro } from 'ng-uikit-pro-standard';\r\nimport { MDBSpinningPreloader } from 'ng-uikit-pro-standard';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport {SharedModule} from './shared/shared.module';\r\nimport {HomeModule} from './home/home.module'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MDBBootstrapModulesPro.forRoot(),\r\n    SharedModule,\r\n    HomeModule\r\n  ],\r\n  providers: [MDBSpinningPreloader],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport {webSocket, WebSocketSubject} from 'rxjs/webSocket';\nimport { Observable, BehaviorSubject, from } from 'rxjs';\nimport {Message} from '../global-interfaces/comms-message'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommsService {\n\n  connectionSocket: WebSocketSubject<any> = null;\n  messages: BehaviorSubject<Message> = new BehaviorSubject<Message>(null);\n\n  constructor() { }\n\n  connect(ipAndPort: string): Promise<string> {\n    return new Promise<string> (async (resolve,reject) => {\n      try {\n        this.connectionSocket = await webSocket(`ws://${ipAndPort}`);\n        this.connectionSocket.asObservable().subscribe((newMesage: Message) => {\n          if (newMesage) {\n            console.log(`data rx: ${JSON.stringify(newMesage)}`);\n            this.messages.next(newMesage);\n          }\n          \n        })\n        resolve()\n      }\n      catch(err) {\n        reject(err);\n      }\n      \n    })\n  }\n\n  send(message: Message): Promise<string> {\n    return new Promise((resolve, reject) => {\n      try {\n        this.connectionSocket.next((message));\n        resolve()\n      }\n      catch(err) {\n        reject(err);\n      }\n    })\n\n  }\n\n  disconnect() {\n    if (this.connectionSocket) {\n      this.connectionSocket.unsubscribe();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\nimport { MDBBootstrapModulesPro } from 'ng-uikit-pro-standard';\nimport {SharedModule} from '../shared/shared.module'\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    MDBBootstrapModulesPro.forRoot(),\n    SharedModule,\n    FormsModule\n  ]\n})\nexport class HomeModule { }\n","<app-navbar></app-navbar>\n<div class=\"view\" style=\"background-color: #37474F;  background-size: cover;\">\n    <!-- Mask & flexbox options-->\n    <div class=\"mask align-items-center\">\n\n            <div class=\"container\" style=\"padding-top: 1rem;\">\n            <mdb-card>\n                <!--Card image-->\n                <!-- <mdb-card-img src=\"https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(97).jpg\" alt=\"Card image cap\"></mdb-card-img> -->\n                <!--Card content-->\n                <mdb-card-body>\n            \n                <!--Title-->\n                <mdb-card-title>\n                    <h4>Send To Controller</h4>\n                </mdb-card-title>\n            \n                <!--Text-->\n                <mdb-card-text> This is an example of how you can send a string to the controller.\n                </mdb-card-text>\n\n                <input mdbInput type=\"text\" class=\"form-control\" placeholder=\"Enter string to send\" [(ngModel)]=\"commandAndData\">\n                <br>\n                <button mdbBtn type=\"button\" color=\"primary\" block=\"true\" mdbWavesEffect (click)=\"send()\">Send</button>\n                </mdb-card-body>\n            </mdb-card>\n        </div>\n        <div class=\"container\" style=\"padding-top: 1rem;\">\n            <mdb-card >\n                <!--Card image-->\n                <!-- <mdb-card-img src=\"https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(97).jpg\" alt=\"Card image cap\"></mdb-card-img> -->\n                <!--Card content-->\n                <mdb-card-body>\n            \n                <!--Title-->\n                <mdb-card-title>\n                    <h4>Response From Controller</h4>\n                </mdb-card-title>\n            \n                <!--Text-->\n                <mdb-card-text *ngIf=\"receivedData\"> {{receivedData}}\n                </mdb-card-text>\n\n                </mdb-card-body>\n            </mdb-card>\n        </div>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {CommsService} from '../../comms/comms.service'\nimport {Message} from '../../global-interfaces/comms-message'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  commandAndData: string = null;\n  receivedData: string = null;\n  constructor(private comms: CommsService) { }\n\n  ngOnInit(): void {\n    this.comms.messages.subscribe((newMessage: Message) => {\n      if (newMessage) {\n        this.receivedData = `${newMessage.Command}: ${newMessage.Data}`;\n      }\n    })\n  }\n\n  async send() {\n    const newCommand: string = this.commandAndData.split(\" \")[0];\n    const newData: string = this.commandAndData.substr(this.commandAndData.indexOf(\" \") + 1);\n    //special command to start websocket connection\n    if (newCommand === \"connect\") {\n       await this.comms.connect(newData).catch(err => {this.receivedData = err});\n    }\n    else{ //send everything else to websockets\n      const newMessage: Message = {Command: newCommand, Data: newData}\n      console.log(`tx: ${JSON.stringify(newMessage)}`);\n      this.comms.send(newMessage).catch(err => {this.receivedData = err});\n    }\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark special-color-dark\">\n    <mdb-navbar-brand>\n        <img src=\"../../../assets/saphi -logo-navbar.png\" height=\"30\" alt=\"\" style=\"padding-right: 1rem;\">\n    </mdb-navbar-brand>\n<!--     <links>\n        <ul class=\"navbar-nav\">\n            <li class=\"nav-item active\">\n                <a class=\"nav-link waves-light\" mdbWavesEffect>Home <span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link waves-light\" mdbWavesEffect>Page 2</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link waves-light\" mdbWavesEffect>Page 3</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link disabled\" >Page 4</a>\n            </li>\n        </ul>\n    </links> -->\n</mdb-navbar>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { MDBBootstrapModulesPro } from 'ng-uikit-pro-standard';\n\n\n\n@NgModule({\n  declarations: [NavbarComponent],\n  imports: [\n    CommonModule,\n    MDBBootstrapModulesPro.forRoot()\n  ],\n  exports: [NavbarComponent]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}